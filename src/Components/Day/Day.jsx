// import { useState } from "react";

import PropTypes from "prop-types";

// import Button from "../Button/Button";

import DayStyle from "./Day.module.css";
// names  import and ad for name className bla-bla.nameClasses from css
// pay attention on name file module.css

const Day = ({
  date,
  name = "",
count = 0,
  is–°ompleted = "",
  moodGood = false,
  comment = "",
}) => {
  // example const for use in  render dom nodes
  const goodMood = (
    <h1 className={DayStyle.Logined}>
     –ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π: <span className={DayStyle.spanMood}>–ß—É–¥–æ–≤–∏–πüëç</span>{" "}
    </h1>
  );
  // example const for use in  render dom nodes
  const badMood = (<h1 className={DayStyle.Login}>
     –ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π: <span className={DayStyle.spanMood}> –¢–∞–∫ —Å–æ–±—ñüëé </span></h1>);

  

  // handale for click as props for Button
  // const handleClickStudReset = () => {
  //   setCount(0);
  // };

  return (
    <>
      <div className={DayStyle.wrapStud}>
      <p className={DayStyle.name}>–°—å–æ–≥–æ–¥–Ω—ñ: <span className={DayStyle.spanDay}>{date}</span></p>

        <p className={DayStyle.name}>–¶–µ–π –¥–µ–Ω—å –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è: <span className={DayStyle.spanDay}>{name}</span></p>
        <p className={DayStyle.name}>
        –ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ —Å—Ç—ñ–ª—å–∫–∏ —Å–ø—Ä–∞–≤: {count}
        </p>
    
        {/* conditional render */}
        {is–°ompleted === "yes" ? (
          <p className={DayStyle.isSucceeded}> –ü–æ—Å–º—ñ—à–∫–∞ –¥–æ –º–µ–Ω–µ —Å—å–æ–≥–æ–¥–Ω—ñ{is–°ompleted}</p>
        ) : (
          <p className={DayStyle.isSucceededNo}> –ü–æ—Å–º—ñ—à–∫–∞ –¥–æ –º–µ–Ω–µ —Å—å–æ–≥–æ–¥–Ω—ñ  {is–°ompleted}</p>
        )}

        <p className={DayStyle.name}>
          {" "}
          –ú—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π —Å—å–æ–≥–æ–¥–Ω—ñ —Ç–∞–∫–∏–π —Ç–æ–º—É —â–æ...{comment}
        </p>
        
               {/* conditional render wsth const 
          For the truth, we accepted the expression in the form in !*!*!*!*  */}
        {moodGood ? goodMood : badMood}
  

      </div>
    </>
  );
};

Day.propTypes = {
  name: PropTypes.string,
  numberUsThings: PropTypes.number,
  is–°ompleted: PropTypes.string,
  moodGood: PropTypes.string,
  count:PropTypes.number,
  comment: PropTypes.string,
  date: PropTypes.string,
};

export default Day;
